package com.med.salma;

import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import android.annotation.SuppressLint;
import android.app.ActionBar;
import android.app.Activity;
import android.content.ContentValues;
import android.content.Intent;
import android.graphics.drawable.ColorDrawable;
import android.media.MediaRecorder;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.VideoView;

public class VideoCaptureActivity extends Activity {
	public String folder_name;
	public String external_storage;
	public File new_folder;
	public MediaRecorder media_recorder;
	public Button start_video_recording, stop_video_recording;
	public VideoView video_view;
	public ContentValues video_content;
	public SalmaDatabaseAdapter database_adapter;

	private Uri fileUri;
	public static final int MEDIA_TYPE_VIDEO = 2;
	private static final int CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE = 200;
	public static VideoCaptureActivity ActivityContext = null;
	public static TextView output;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_video_capture);
		
		ActionBar action_bar = getActionBar();
		action_bar.setDisplayHomeAsUpEnabled(true);
		action_bar.setBackgroundDrawable(new ColorDrawable(getResources()
				.getColor(R.drawable.action_bar)));
		
		start_video_recording = (Button) findViewById(R.id.btn_start_recording_video);
		output = (TextView) findViewById(R.id.output);
         
		database_adapter = new SalmaDatabaseAdapter(getApplicationContext());
		
		// Click listener for start video button
		start_video_recording.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				// create new Intentwith with Standard Intent action that can be
				// sent to have the camera application capture an video and
				// return it.
				Intent intent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);

				// create a file to save the video
				fileUri = getOutputMediaFileUri(MEDIA_TYPE_VIDEO);

				// set the image file name
				intent.putExtra(MediaStore.EXTRA_OUTPUT, fileUri);

				// set the video image quality to high
				intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 1);

				// start the Video Capture Intent
				startActivityForResult(intent,
						CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE);
			}
		});

	}

	/** Create a file Uri for saving an image or video */
	private static Uri getOutputMediaFileUri(int type) {

		return Uri.fromFile(getOutputMediaFile(type));
	}

	/** Create a File for saving an image or video */
	@SuppressLint("SimpleDateFormat")
	private static File getOutputMediaFile(int type) {

		// Check that the SDCard is mounted
		File mediaStorageDir = new File(
				Environment
						.getExternalStorageDirectory(),
				"TBCureVideos");

		// Create the storage directory(TBCureVideos) if it does not exist
		if (!mediaStorageDir.exists()) {

			if (!mediaStorageDir.mkdirs()) {

				output.setText("Failed to create directory TBCureVideos.");

				Toast.makeText(ActivityContext,
						"Failed to create directory TBCureVideos.",
						Toast.LENGTH_LONG).show();

				Log.d("TBCureVideos",
						"Failed to create directory TBCureVideos.");
				return null;
			}
		}

		// Create a media file name

		// For unique file name appending current timeStamp with file name
		java.util.Date date = new java.util.Date();
		String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(date
				.getTime());

		File mediaFile;

		if (type == MEDIA_TYPE_VIDEO) {

			// For unique video file name appending current timeStamp with file
			// name
			mediaFile = new File(mediaStorageDir.getPath()+ File.separator
					+ "TB_VID_" + timeStamp + ".mp4");

		} else {
			return null;
		}

		return mediaFile;
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {

		// After camera screen this code will excuted
		
		super.onActivityResult(requestCode, resultCode, data);

		if (requestCode == CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE) {

			if (resultCode == RESULT_OK) {
				
				output.setText("Video File : " + data.getData());

				// Video captured and saved to fileUri specified in the Intent
				Toast.makeText(this, "Video saved to:" + data.getData(),
						Toast.LENGTH_LONG).show();
				
				//////// Save to database here ///////
				database_adapter.addAdherenceReport(data.getData(), DateFormat.getDateInstance().format(new Date()));
				
			} else if (resultCode == RESULT_CANCELED) {

				output.setText("User cancelled the video capture.");

				// User cancelled the video capture
				Toast.makeText(this, "User cancelled the video capture.",
						Toast.LENGTH_LONG).show();

			} else {

				output.setText("Video capture failed.");

				// Video capture failed, advise user
				Toast.makeText(this, "Video capture failed.", Toast.LENGTH_LONG)
						.show();
			}
		}
	}
}